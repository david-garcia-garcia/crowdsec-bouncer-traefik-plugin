services:
  traefik:
    image: "traefik:v3.5.0-rc2"
    container_name: "traefik-test"
    restart: unless-stopped
    command:
      - "--log.level=DEBUG"
      - "--accesslog"
      - "--accesslog.filepath=/var/log/traefik/access.log"
      - "--accesslog.format=json"
      - "--accesslog.fields.headers.names.X-Crowdsec-Remediation=keep"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--experimental.localplugins.bouncer.modulename=github.com/maxlerebourg/crowdsec-bouncer-traefik-plugin"
      - "--experimental.localplugins.bouncer.settings.useunsafe=true"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "traefik-logs:/var/log/traefik"
      - "./ban.html:/ban.html:ro"
      - "./captcha.html:/captcha.html:ro"
      - "./:/plugins-local/src/github.com/maxlerebourg/crowdsec-bouncer-traefik-plugin"
    ports:
      - "8000:80"
      - "8080:8080"
    depends_on:
      - crowdsec
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/api/rawdata"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  # Test service - basic whoami
  whoami:
    image: traefik/whoami
    container_name: "whoami-test"
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=PathPrefix(`/whoami`)"
      - "traefik.http.routers.whoami.entrypoints=web"
      - "traefik.http.routers.whoami.middlewares=bouncer-test@docker"
      - "traefik.http.services.whoami.loadbalancer.server.port=80"
      
      # Bouncer middleware with test configuration
      - "traefik.http.middlewares.bouncer-test.plugin.bouncer.enabled=true"
      - "traefik.http.middlewares.bouncer-test.plugin.bouncer.crowdseclapikey=40796d93c2958f9e58345514e67740e5"
      - "traefik.http.middlewares.bouncer-test.plugin.bouncer.crowdseclapiurl=http://crowdsec:8080/"
      - "traefik.http.middlewares.bouncer-test.plugin.bouncer.httptimeoutseconds=${HTTP_TIMEOUT_SECONDS:-30}"
      - "traefik.http.middlewares.bouncer-test.plugin.bouncer.loglevel=DEBUG"
      - "traefik.http.middlewares.bouncer-test.plugin.bouncer.updateintervalseconds=5"
      - "traefik.http.middlewares.bouncer-test.plugin.bouncer.crowdsecmode=none"
      - "traefik.http.middlewares.bouncer-test.plugin.bouncer.forwardedheaderstrustedips=0.0.0.0/0"

  # Test service - protected endpoint
  protected:
    image: traefik/whoami
    container_name: "protected-test"
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.protected.rule=PathPrefix(`/protected`)"
      - "traefik.http.routers.protected.entrypoints=web"
      - "traefik.http.routers.protected.middlewares=bouncer-strict@docker"
      - "traefik.http.services.protected.loadbalancer.server.port=80"
      
      # Strict bouncer middleware for testing blocks
      - "traefik.http.middlewares.bouncer-strict.plugin.bouncer.enabled=true"
      - "traefik.http.middlewares.bouncer-strict.plugin.bouncer.crowdseclapikey=40796d93c2958f9e58345514e67740e5"
      - "traefik.http.middlewares.bouncer-strict.plugin.bouncer.crowdseclapiurl=http://crowdsec:8080/"
      - "traefik.http.middlewares.bouncer-strict.plugin.bouncer.httptimeoutseconds=${HTTP_TIMEOUT_SECONDS:-30}"
      - "traefik.http.middlewares.bouncer-strict.plugin.bouncer.loglevel=DEBUG"
      - "traefik.http.middlewares.bouncer-strict.plugin.bouncer.updateintervalseconds=5"
      - "traefik.http.middlewares.bouncer-strict.plugin.bouncer.crowdsecmode=none"
      - "traefik.http.middlewares.bouncer-strict.plugin.bouncer.banHtmlFilePath=/ban.html"

  # Test service - captcha enabled
  captcha:
    image: traefik/whoami
    container_name: "captcha-test"
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.captcha.rule=PathPrefix(`/captcha`)"
      - "traefik.http.routers.captcha.entrypoints=web"
      - "traefik.http.routers.captcha.middlewares=bouncer-captcha@docker"
      - "traefik.http.services.captcha.loadbalancer.server.port=80"
      
      # Captcha-enabled bouncer middleware
      - "traefik.http.middlewares.bouncer-captcha.plugin.bouncer.enabled=true"
      - "traefik.http.middlewares.bouncer-captcha.plugin.bouncer.crowdseclapikey=40796d93c2958f9e58345514e67740e5"
      - "traefik.http.middlewares.bouncer-captcha.plugin.bouncer.crowdseclapiurl=http://crowdsec:8080/"
      - "traefik.http.middlewares.bouncer-captcha.plugin.bouncer.httptimeoutseconds=${HTTP_TIMEOUT_SECONDS:-30}"
      - "traefik.http.middlewares.bouncer-captcha.plugin.bouncer.loglevel=DEBUG"
      - "traefik.http.middlewares.bouncer-captcha.plugin.bouncer.updateintervalseconds=5"
      - "traefik.http.middlewares.bouncer-captcha.plugin.bouncer.crowdsecmode=none"
      - "traefik.http.middlewares.bouncer-captcha.plugin.bouncer.captchaHtmlFilePath=/captcha.html"
      - "traefik.http.middlewares.bouncer-captcha.plugin.bouncer.remediationHeadersCustomName=X-Crowdsec-Remediation"

  # Test service - disabled bouncer
  disabled:
    image: traefik/whoami
    container_name: "disabled-test"
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.disabled.rule=PathPrefix(`/disabled`)"
      - "traefik.http.routers.disabled.entrypoints=web"
      - "traefik.http.routers.disabled.middlewares=bouncer-disabled@docker"
      - "traefik.http.services.disabled.loadbalancer.server.port=80"
      
      # Disabled bouncer middleware
      - "traefik.http.middlewares.bouncer-disabled.plugin.bouncer.enabled=false"
      - "traefik.http.middlewares.bouncer-disabled.plugin.bouncer.crowdseclapikey=40796d93c2958f9e58345514e67740e5"
      - "traefik.http.middlewares.bouncer-disabled.plugin.bouncer.loglevel=DEBUG"

  # Test service - remediation headers
  remediation-headers:
    image: traefik/whoami
    container_name: "remediation-headers-test"
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.remediation-headers.rule=PathPrefix(`/remediation-headers`)"
      - "traefik.http.routers.remediation-headers.entrypoints=web"
      - "traefik.http.routers.remediation-headers.middlewares=bouncer-remediation-headers@docker"
      - "traefik.http.services.remediation-headers.loadbalancer.server.port=80"
      
      # Bouncer middleware with custom remediation header
      - "traefik.http.middlewares.bouncer-remediation-headers.plugin.bouncer.enabled=true"
      - "traefik.http.middlewares.bouncer-remediation-headers.plugin.bouncer.crowdseclapikey=40796d93c2958f9e58345514e67740e5"
      - "traefik.http.middlewares.bouncer-remediation-headers.plugin.bouncer.crowdseclapiurl=http://crowdsec:8080/"
      - "traefik.http.middlewares.bouncer-remediation-headers.plugin.bouncer.httptimeoutseconds=${HTTP_TIMEOUT_SECONDS:-30}"
      - "traefik.http.middlewares.bouncer-remediation-headers.plugin.bouncer.loglevel=DEBUG"
      - "traefik.http.middlewares.bouncer-remediation-headers.plugin.bouncer.updateintervalseconds=5"
      - "traefik.http.middlewares.bouncer-remediation-headers.plugin.bouncer.crowdsecmode=none"
      - "traefik.http.middlewares.bouncer-remediation-headers.plugin.bouncer.remediationHeadersCustomName=X-Crowdsec-Remediation"
      - "traefik.http.middlewares.bouncer-remediation-headers.plugin.bouncer.banHtmlFilePath=/ban.html"

  # Test service - redis cache enabled
  redis-cache:
    image: traefik/whoami
    container_name: "redis-cache-test"
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.redis-cache.rule=PathPrefix(`/redis-cache`)"
      - "traefik.http.routers.redis-cache.entrypoints=web"
      - "traefik.http.routers.redis-cache.middlewares=bouncer-redis-cache@docker"
      - "traefik.http.services.redis-cache.loadbalancer.server.port=80"
      
      # Redis-enabled bouncer middleware
      - "traefik.http.middlewares.bouncer-redis-cache.plugin.bouncer.enabled=true"
      - "traefik.http.middlewares.bouncer-redis-cache.plugin.bouncer.crowdseclapikey=40796d93c2958f9e58345514e67740e5"
      - "traefik.http.middlewares.bouncer-redis-cache.plugin.bouncer.crowdseclapiurl=http://crowdsec:8080/"
      - "traefik.http.middlewares.bouncer-redis-cache.plugin.bouncer.httptimeoutseconds=${HTTP_TIMEOUT_SECONDS:-30}"
      - "traefik.http.middlewares.bouncer-redis-cache.plugin.bouncer.loglevel=DEBUG"
      - "traefik.http.middlewares.bouncer-redis-cache.plugin.bouncer.updateintervalseconds=5"
      - "traefik.http.middlewares.bouncer-redis-cache.plugin.bouncer.crowdsecmode=live"
      - "traefik.http.middlewares.bouncer-redis-cache.plugin.bouncer.redisCacheEnabled=true"
      - "traefik.http.middlewares.bouncer-redis-cache.plugin.bouncer.redisCacheHost=dragonfly:6379"
      - "traefik.http.middlewares.bouncer-redis-cache.plugin.bouncer.redisCachePassword=testpassword123"
      - "traefik.http.middlewares.bouncer-redis-cache.plugin.bouncer.redisCacheDatabase=0"
      - "traefik.http.middlewares.bouncer-redis-cache.plugin.bouncer.redisCacheUnreachableBlock=true"
    depends_on:
      - dragonfly

  # Test service - redis cache with unreachable block disabled
  redis-cache-permissive:
    image: traefik/whoami
    container_name: "redis-cache-permissive-test"
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.redis-cache-permissive.rule=PathPrefix(`/redis-cache-permissive`)"
      - "traefik.http.routers.redis-cache-permissive.entrypoints=web"
      - "traefik.http.routers.redis-cache-permissive.middlewares=bouncer-redis-cache-permissive@docker"
      - "traefik.http.services.redis-cache-permissive.loadbalancer.server.port=80"
      
      # Redis-enabled bouncer middleware with unreachable block disabled
      - "traefik.http.middlewares.bouncer-redis-cache-permissive.plugin.bouncer.enabled=true"
      - "traefik.http.middlewares.bouncer-redis-cache-permissive.plugin.bouncer.crowdseclapikey=40796d93c2958f9e58345514e67740e5"
      - "traefik.http.middlewares.bouncer-redis-cache-permissive.plugin.bouncer.crowdseclapiurl=http://crowdsec:8080/"
      - "traefik.http.middlewares.bouncer-redis-cache-permissive.plugin.bouncer.httptimeoutseconds=${HTTP_TIMEOUT_SECONDS:-30}"
      - "traefik.http.middlewares.bouncer-redis-cache-permissive.plugin.bouncer.loglevel=DEBUG"
      - "traefik.http.middlewares.bouncer-redis-cache-permissive.plugin.bouncer.updateintervalseconds=5"
      - "traefik.http.middlewares.bouncer-redis-cache-permissive.plugin.bouncer.crowdsecmode=live"
      - "traefik.http.middlewares.bouncer-redis-cache-permissive.plugin.bouncer.redisCacheEnabled=true"
      - "traefik.http.middlewares.bouncer-redis-cache-permissive.plugin.bouncer.redisCacheHost=dragonfly:6379"
      - "traefik.http.middlewares.bouncer-redis-cache-permissive.plugin.bouncer.redisCachePassword=testpassword123"
      - "traefik.http.middlewares.bouncer-redis-cache-permissive.plugin.bouncer.redisCacheDatabase=1"
      - "traefik.http.middlewares.bouncer-redis-cache-permissive.plugin.bouncer.redisCacheUnreachableBlock=false"
    depends_on:
      - dragonfly

  dragonfly:
    image: docker.dragonflydb.io/dragonflydb/dragonfly:v1.31.2
    container_name: "dragonfly-test"
    restart: unless-stopped
    command: 
      - "--requirepass=testpassword123"
      - "--bind=0.0.0.0"
      - "--port=6379"
    environment:
      - DFLY_requirepass=testpassword123
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "testpassword123", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s

  crowdsec:
    image: crowdsecurity/crowdsec:v1.6.8
    container_name: "crowdsec-test"
    restart: unless-stopped
    environment:
      # Minimal collections for testing
      COLLECTIONS: "crowdsecurity/traefik"
      CUSTOM_HOSTNAME: "crowdsec-test"
      # Test bouncer key
      BOUNCER_KEY_TRAEFIK_TEST: "40796d93c2958f9e58345514e67740e5"
      # Disable aggressive collections that cause 150k decision issue
      DISABLE_COLLECTIONS: "crowdsecurity/iptables crowdsecurity/linux crowdsecurity/sshd"
      # Enable debugging
      PARSERS: "crowdsecurity/syslog-logs crowdsecurity/dateparse-enrich"
      # Minimal setup for testing
      DISABLE_AGENT: "false"
      DISABLE_ONLINE_API: "true"
      # Test mode settings
      LEVEL_DEBUG: "true"
    volumes:
      - "crowdsec-db-test:/var/lib/crowdsec/data/"
      - "crowdsec-config-test:/etc/crowdsec/"
    labels:
      - "traefik.enable=false"
    healthcheck:
      test: ["CMD", "cscli", "version"]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 30s
    ports:
      # Expose LAPI for testing
      - "8081:8080"



volumes:
  crowdsec-db-test:
  crowdsec-config-test:
  traefik-logs:

networks:
  default:
    name: crowdsec-test-network 